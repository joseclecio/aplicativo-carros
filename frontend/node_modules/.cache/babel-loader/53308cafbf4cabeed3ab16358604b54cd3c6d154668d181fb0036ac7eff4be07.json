{"ast":null,"code":"// Dentro do componente FormularioVeiculo.jsx\n\nconst uploadImages = async () => {\n  setIsUploading(true);\n  const uploadedImageUrls = [];\n  const cloudName = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\n  const uploadPreset = process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET;\n\n  // Verificação de segurança\n  if (!cloudName || !uploadPreset) {\n    console.error(\"Variáveis de ambiente do Cloudinary não estão configuradas!\");\n    setIsUploading(false);\n    throw new Error(\"Configuração de upload incompleta.\");\n  }\n  const uploadUrl = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;\n  for (const file of imageFiles) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', uploadPreset);\n    try {\n      const response = await fetch(uploadUrl, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n\n      // Se o Cloudinary devolver um erro, ele estará neste objeto\n      if (data.error) {\n        console.error(\"Erro do Cloudinary:\", data.error.message);\n        throw new Error(`Falha no upload: ${data.error.message}`);\n      }\n      uploadedImageUrls.push(data.secure_url);\n    } catch (error) {\n      console.error(\"Falha crítica ao enviar imagem:\", error);\n      setIsUploading(false);\n      // Re-lança o erro para que o handleSubmit possa apanhá-lo\n      throw error;\n    }\n  }\n  setIsUploading(false);\n  return uploadedImageUrls;\n};","map":{"version":3,"names":["uploadImages","setIsUploading","uploadedImageUrls","cloudName","process","env","REACT_APP_CLOUDINARY_CLOUD_NAME","uploadPreset","REACT_APP_CLOUDINARY_UPLOAD_PRESET","console","error","Error","uploadUrl","file","imageFiles","formData","FormData","append","response","fetch","method","body","data","json","message","push","secure_url"],"sources":["C:/Users/joseclecio.conceicao/Documents/aplicativo-carros/frontend/src/pages/admin/FormularioVeiculo.jsx"],"sourcesContent":["// Dentro do componente FormularioVeiculo.jsx\r\n\r\nconst uploadImages = async () => {\r\n    setIsUploading(true);\r\n    const uploadedImageUrls = [];\r\n    const cloudName = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\r\n    const uploadPreset = process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET;\r\n    \r\n    // Verificação de segurança\r\n    if (!cloudName || !uploadPreset) {\r\n        console.error(\"Variáveis de ambiente do Cloudinary não estão configuradas!\");\r\n        setIsUploading(false);\r\n        throw new Error(\"Configuração de upload incompleta.\");\r\n    }\r\n    \r\n    const uploadUrl = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;\r\n\r\n    for (const file of imageFiles) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('upload_preset', uploadPreset);\r\n\r\n        try {\r\n            const response = await fetch(uploadUrl, { method: 'POST', body: formData });\r\n            const data = await response.json();\r\n            \r\n            // Se o Cloudinary devolver um erro, ele estará neste objeto\r\n            if (data.error) {\r\n                console.error(\"Erro do Cloudinary:\", data.error.message);\r\n                throw new Error(`Falha no upload: ${data.error.message}`);\r\n            }\r\n            \r\n            uploadedImageUrls.push(data.secure_url);\r\n        } catch (error) {\r\n            console.error(\"Falha crítica ao enviar imagem:\", error);\r\n            setIsUploading(false);\r\n            // Re-lança o erro para que o handleSubmit possa apanhá-lo\r\n            throw error; \r\n        }\r\n    }\r\n    \r\n    setIsUploading(false);\r\n    return uploadedImageUrls;\r\n};"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7BC,cAAc,CAAC,IAAI,CAAC;EACpB,MAAMC,iBAAiB,GAAG,EAAE;EAC5B,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,+BAA+B;EAC7D,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,kCAAkC;;EAEnE;EACA,IAAI,CAACL,SAAS,IAAI,CAACI,YAAY,EAAE;IAC7BE,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5ET,cAAc,CAAC,KAAK,CAAC;IACrB,MAAM,IAAIU,KAAK,CAAC,oCAAoC,CAAC;EACzD;EAEA,MAAMC,SAAS,GAAG,mCAAmCT,SAAS,eAAe;EAE7E,KAAK,MAAMU,IAAI,IAAIC,UAAU,EAAE;IAC3B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IAC7BE,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEV,YAAY,CAAC;IAE9C,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACP,SAAS,EAAE;QAAEQ,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEN;MAAS,CAAC,CAAC;MAC3E,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,IAAID,IAAI,CAACZ,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEY,IAAI,CAACZ,KAAK,CAACc,OAAO,CAAC;QACxD,MAAM,IAAIb,KAAK,CAAC,oBAAoBW,IAAI,CAACZ,KAAK,CAACc,OAAO,EAAE,CAAC;MAC7D;MAEAtB,iBAAiB,CAACuB,IAAI,CAACH,IAAI,CAACI,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDT,cAAc,CAAC,KAAK,CAAC;MACrB;MACA,MAAMS,KAAK;IACf;EACJ;EAEAT,cAAc,CAAC,KAAK,CAAC;EACrB,OAAOC,iBAAiB;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}